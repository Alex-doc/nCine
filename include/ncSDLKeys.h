#ifndef NCKEYS
#define NCKEYS

#include <SDL/SDL_keysym.h>

typedef enum {
	NCKEY_UNKNOWN		= SDLK_UNKNOWN,
	NCKEY_FIRST			= SDLK_FIRST,
	NCKEY_BACKSPACE		= SDLK_BACKSPACE,
	NCKEY_TAB			= SDLK_TAB,
	NCKEY_CLEAR			= SDLK_CLEAR,
	NCKEY_RETURN		= SDLK_RETURN,
	NCKEY_PAUSE			= SDLK_PAUSE,
	NCKEY_ESCAPE		= SDLK_ESCAPE,
	NCKEY_SPACE			= SDLK_SPACE,
	NCKEY_EXCLAIM		= SDLK_EXCLAIM,
	NCKEY_QUOTEDBL		= SDLK_QUOTEDBL,
	NCKEY_HASH			= SDLK_HASH,
	NCKEY_DOLLAR		= SDLK_DOLLAR,
	NCKEY_AMPERSAND		= SDLK_AMPERSAND,
	NCKEY_QUOTE			= SDLK_QUOTE,
	NCKEY_LEFTPAREN		= SDLK_LEFTPAREN,
	NCKEY_RIGHTPAREN	= SDLK_RIGHTPAREN,
	NCKEY_ASTERISK		= SDLK_ASTERISK,
	NCKEY_PLUS			= SDLK_PLUS,
	NCKEY_COMMA			= SDLK_COMMA,
	NCKEY_MINUS			= SDLK_MINUS,
	NCKEY_PERIOD		= SDLK_PERIOD,
	NCKEY_SLASH			= SDLK_SLASH,
	NCKEY_0				= SDLK_0,
	NCKEY_1				= SDLK_1,
	NCKEY_2				= SDLK_2,
	NCKEY_3				= SDLK_3,
	NCKEY_4				= SDLK_4,
	NCKEY_5				= SDLK_5,
	NCKEY_6				= SDLK_6,
	NCKEY_7				= SDLK_7,
	NCKEY_8				= SDLK_8,
	NCKEY_9				= SDLK_9,
	NCKEY_COLON			= SDLK_COLON,
	NCKEY_SEMICOLON		= SDLK_SEMICOLON,
	NCKEY_LESS			= SDLK_LESS,
	NCKEY_EQUALS		= SDLK_EQUALS,
	NCKEY_GREATER		= SDLK_GREATER,
	NCKEY_QUESTION		= SDLK_QUESTION,
	NCKEY_AT			= SDLK_AT,

	NCKEY_LEFTBRACKET	= SDLK_LEFTBRACKET,
	NCKEY_BACKSLASH		= SDLK_BACKSLASH,
	NCKEY_RIGHTBRACKET	= SDLK_RIGHTBRACKET,
	NCKEY_CARET			= SDLK_CARET,
	NCKEY_UNDERSCORE	= SDLK_UNDERSCORE,
	NCKEY_BACKQUOTE		= SDLK_BACKQUOTE,
	NCKEY_A				= SDLK_a,
	NCKEY_B				= SDLK_b,
	NCKEY_C				= SDLK_c,
	NCKEY_D				= SDLK_d,
	NCKEY_E				= SDLK_e,
	NCKEY_F				= SDLK_f,
	NCKEY_G				= SDLK_g,
	NCKEY_H				= SDLK_h,
	NCKEY_I				= SDLK_i,
	NCKEY_J				= SDLK_j,
	NCKEY_K				= SDLK_k,
	NCKEY_L				= SDLK_l,
	NCKEY_M				= SDLK_m,
	NCKEY_N				= SDLK_n,
	NCKEY_O				= SDLK_o,
	NCKEY_P				= SDLK_p,
	NCKEY_Q				= SDLK_q,
	NCKEY_R				= SDLK_r,
	NCKEY_S				= SDLK_s,
	NCKEY_T				= SDLK_t,
	NCKEY_U				= SDLK_u,
	NCKEY_V				= SDLK_v,
	NCKEY_W				= SDLK_w,
	NCKEY_X				= SDLK_x,
	NCKEY_Y				= SDLK_y,
	NCKEY_Z				= SDLK_z,
	NCKEY_DELETE		= SDLK_DELETE,

	NCKEY_KP0			= SDLK_KP0,
	NCKEY_KP1			= SDLK_KP1,
	NCKEY_KP2			= SDLK_KP2,
	NCKEY_KP3			= SDLK_KP3,
	NCKEY_KP4			= SDLK_KP4,
	NCKEY_KP5			= SDLK_KP5,
	NCKEY_KP6			= SDLK_KP6,
	NCKEY_KP7			= SDLK_KP7,
	NCKEY_KP8			= SDLK_KP8,
	NCKEY_KP9			= SDLK_KP9,
	NCKEY_KP_PERIOD		= SDLK_KP_PERIOD,
	NCKEY_KP_DIVIDE		= SDLK_KP_DIVIDE,
	NCKEY_KP_MULTIPLY	= SDLK_KP_MULTIPLY,
	NCKEY_KP_MINUS		= SDLK_KP_MINUS,
	NCKEY_KP_PLUS		= SDLK_KP_PLUS,
	NCKEY_KP_ENTER		= SDLK_KP_ENTER,
	NCKEY_KP_EQUALS		= SDLK_KP_EQUALS,

	NCKEY_UP			= SDLK_UP,
	NCKEY_DOWN			= SDLK_DOWN,
	NCKEY_RIGHT			= SDLK_RIGHT,
	NCKEY_LEFT			= SDLK_LEFT,
	NCKEY_INSERT		= SDLK_INSERT,
	NCKEY_HOME			= SDLK_HOME,
	NCKEY_END			= SDLK_END,
	NCKEY_PAGEUP		= SDLK_PAGEUP,
	NCKEY_PAGEDOWN		= SDLK_PAGEDOWN,

	NCKEY_F1			= SDLK_F1,
	NCKEY_F2			= SDLK_F2,
	NCKEY_F3			= SDLK_F3,
	NCKEY_F4			= SDLK_F4,
	NCKEY_F5			= SDLK_F5,
	NCKEY_F6			= SDLK_F6,
	NCKEY_F7			= SDLK_F7,
	NCKEY_F8			= SDLK_F8,
	NCKEY_F9			= SDLK_F9,
	NCKEY_F10			= SDLK_F10,
	NCKEY_F11			= SDLK_F11,
	NCKEY_F12			= SDLK_F12,
	NCKEY_F13			= SDLK_F13,
	NCKEY_F14			= SDLK_F14,
	NCKEY_F15			= SDLK_F15,

	NCKEY_NUMLOCK		= SDLK_NUMLOCK,
	NCKEY_CAPSLOCK		= SDLK_CAPSLOCK,
	NCKEY_SCROLLOCK		= SDLK_SCROLLOCK,
	NCKEY_RSHIFT		= SDLK_RSHIFT,
	NCKEY_LSHIFT		= SDLK_LSHIFT,
	NCKEY_RCTRL			= SDLK_RCTRL,
	NCKEY_LCTRL			= SDLK_LCTRL,
	NCKEY_RALT			= SDLK_RALT,
	NCKEY_LALT			= SDLK_LALT,
	NCKEY_RMETA			= SDLK_RMETA,
	NCKEY_LMETA			= SDLK_LMETA,
	NCKEY_LSUPER		= SDLK_LSUPER,
	NCKEY_RSUPER		= SDLK_RSUPER,
	NCKEY_MODE			= SDLK_MODE,
	NCKEY_COMPOSE		= SDLK_COMPOSE,

	NCKEY_HELP			= SDLK_HELP,
	NCKEY_PRINT			= SDLK_PRINT,
	NCKEY_SYSREQ		= SDLK_SYSREQ,
	NCKEY_BREAK			= SDLK_BREAK,
	NCKEY_MENU			= SDLK_MENU,
	NCKEY_POWER			= SDLK_POWER,
	NCKEY_EURO			= SDLK_EURO,
	NCKEY_UNDO			= SDLK_UNDO,

	NCKEY_LAST
} ncKeySym;

typedef enum {
	NCKEYMOD_NONE		= KMOD_NONE,
	NCKEYMOD_LSHIFT		= KMOD_LSHIFT,
	NCKEYMOD_RSHIFT		= KMOD_RSHIFT,
	NCKEYMOD_LCTRL		= KMOD_LCTRL,
	NCKEYMOD_RCTRL		= KMOD_RCTRL,
	NCKEYMOD_LALT		= KMOD_LALT,
	NCKEYMOD_RALT		= KMOD_RALT,
	NCKEYMOD_LMETA		= KMOD_LMETA,
	NCKEYMOD_RMETA		= KMOD_RMETA,
	NCKEYMOD_NUM		= KMOD_NUM,
	NCKEYMOD_CAPS		= KMOD_CAPS,
	NCKEYMOD_MODE		= KMOD_MODE
} ncKeyMod;

#define NCKEYMOD_CTRL	(NCKEYMOD_LCTRL | NCKEYMOD_RCTRL)
#define NCKEYMOD_SHIFT	(NCKEYMOD_LSHIFT | NCKEYMOD_RSHIFT)
#define NCKEYMOD_ALT	(NCKEYMOD_LALT | NCKEYMOD_RALT)
#define NCKEYMOD_META	(NCKEYMOD_LMETA | NCKEYMOD_RMETA)

#endif
